#!/usr/bin/env bash
#
# Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3 only, as
# published by the Free Software Foundation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 3 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 3 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# This script is a modified graal/vm/mx.vm/launcher_template.sh and deployed as
# jre/languages/R/bin/Rscript in JDK8
# languages/R/bin/Rscript in JDK11

source="${BASH_SOURCE[0]}"
while [ -h "$source" ] ; do
    prev_source="$source"
    source="$(readlink "$source")";
    if [[ "$source" != /* ]]; then
        # if the link was relative, it was relative to where it came from
        dir="$( cd -P "$( dirname "$prev_source" )" && pwd )"
        source="$dir/$source"
    fi
done
location="$( cd -P "$( dirname "$source" )" && pwd )"
fastr_home="$( dirname "${location}" )"

## REMOVE FOR NATIVE IMAGE: BEGIN
absolute_cp=()
jvm_args=()
launcher_args=()

# Unfortunately, parsing of `--jvm.*` arguments has to be done blind:
# Maybe some of those arguments where not really intended for the launcher but were application arguments

for o in "$@"; do
    if [[ "$o" == "--jvm.help" ]]; then
      # TODO This condition should be removed when the Launcher handles --jvm.help correctly.
      launcher_args+=("$o")
    elif [[ "$o" == "--vm.help" ]]; then
      # TODO This condition should be removed when the Launcher handles --jvm.help correctly.
      launcher_args+=("$o")
    elif [[ "$o" == --jvm.* ]]; then
        >&2 echo "'--jvm.*' options are deprecated, use '--vm.*' instead."
        jvm_arg="${o#--jvm.}"
        if [[ "$jvm_arg" == "cp" ]]; then
            >&2 echo "'--jvm.cp' argument must be of the form '--jvm.cp=../../../lib/graalvm/sulong-launcher.jar:../../../lib/graalvm/launcher-common.jar', not two separate arguments"
            exit 1
        fi
        if [[ "$jvm_arg" == "classpath" ]]; then
            >&2 echo "'--jvm.classpath' argument must be of the form '--jvm.classpath=../../../lib/graalvm/sulong-launcher.jar:../../../lib/graalvm/launcher-common.jar', not two separate arguments"
            exit 1
        fi
        if [[ "$jvm_arg" == "cp="* ]]; then
            custom_cp=${jvm_arg#cp=}
        elif [[ "$jvm_arg" == "classpath="* ]]; then
            custom_cp=${jvm_arg#classpath=}
        fi
        if [[ -z "${custom_cp+x}" ]]; then
            jvm_args+=("-${jvm_arg}")
        else
            IFS=: read -ra custom_cp_a <<< "${custom_cp}"
            for e in "${custom_cp_a[@]}"; do
                absolute_cp+=("${e}")
            done
        fi
    elif [[ "$o" == --vm.* ]]; then
        vm_arg="${o#--vm.}"
        if [[ "$vm_arg" == "cp" ]]; then
            >&2 echo "'--vm.cp' argument must be of the form '--vm.cp=../../../lib/graalvm/sulong-launcher.jar:../../../lib/graalvm/launcher-common.jar', not two separate arguments"
            exit 1
        fi
        if [[ "$vm_arg" == "classpath" ]]; then
            >&2 echo "'--vm.classpath' argument must be of the form '--vm.classpath=../../../lib/graalvm/sulong-launcher.jar:../../../lib/graalvm/launcher-common.jar', not two separate arguments"
            exit 1
        fi
        if [[ "$vm_arg" == "cp="* ]]; then
            custom_cp=${vm_arg#cp=}
        elif [[ "$vm_arg" == "classpath="* ]]; then
            custom_cp=${vm_arg#classpath=}
        fi
        if [[ -z "${custom_cp+x}" ]]; then
            jvm_args+=("-${vm_arg}")
        else
            IFS=: read -ra custom_cp_a <<< "${custom_cp}"
            for e in "${custom_cp_a[@]}"; do
                absolute_cp+=("${e}")
            done
        fi
    else
        launcher_args+=("$o")
    fi
done

cp="$(IFS=: ; echo "${absolute_cp[*]}")"
cp="${fastr_home}/fastr-launcher.jar:$cp"

## REMOVE FOR NATIVE IMAGE: END
if [[ "${VERBOSE_GRAALVM_LAUNCHERS}" == "true" ]]; then
    set -x
fi

# we can invoke FastR directly, but we do have to set R_HOME
export R_HOME="${fastr_home}"

exec "${fastr_home}/../../bin/java" -cp "$cp" -noverify -Dgraal.TruffleCompilationThreshold=10000 -Dgraal.TruffleCompilerThreads=2 -Xmx4g "${jvm_args[@]}" com.oracle.truffle.r.launcher.RMain Rscript ${FASTR_INTERNAL_ARGS[@]} "${launcher_args[@]}"
