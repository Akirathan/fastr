#!/bin/bash
#
# Copyright (c) 2017, 2018, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3 only, as
# published by the Free Software Foundation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 3 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 3 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

ORIG_CMD=$1
shift

if [[ "$FASTR_RFFI" != 'llvm-only' ]]; then
	${ORIG_CMD} "$@"
fi
if [[ "$FASTR_RFFI" == 'nfi-only' ]]; then
    exit 0
fi

SOURCE="$0"
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

F2C=""
F2C_H_INCLUDE="${DIR}/../include/"
if [ -f "${DIR}/f2c" ]
then
	# For a package build
	F2C="${DIR}/f2c"
else
	# For the FastR build
	F2C="${DIR}/../../bin/f2c"
fi

. $DIR/llvm-helper

errorOccurred || {
try
(

  find_source_and_target "$@"

  target_file=`basename ${source_file}`
  target_file=${target_file%%.*}
  target_file="${target_dir}/${target_file}.c"

  if [ -f "${source_file}_c" ]
  then
  	# Just copy the patched pre-transformed C source to the target dir,
  	# simulating so the f2c transformation
  	cp "${source_file}_c" "${target_file}"
  else
	$F2C "${source_file}" "-d${target_dir}"
	ecode=$?
	if [[ $ecode -ne 0 ]]; then
	  exit $ecode
	fi
  fi
  
  replace_arg_from="${source_file}"
  replace_arg_to="${target_file}"
  fortran=1
  analyze_args "$@"

  llvm_tool=clang
  get_llvm_tool
  runit $llvm_tool_bin -I${F2C_H_INCLUDE} "${llvm_args[@]}"
  ecode=$?
  if [[ $ecode -ne 0 ]]; then
    exit $ecode
  fi

  # the llvm_ir_file is empty if the result is sent to stdout
  if [ -n "$llvm_ir_file" ]; then
    mem2reg_opt
    ecode=$?
    if [[ $ecode -ne 0 ]]; then
      exit $ecode
    fi
  fi

) || catch || {
	recordError
}
}
